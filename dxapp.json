{
  "name": "amplivar",
  "title": "Amplivar",
  "summary": "v1.0 - Amplivar",
  "tags": [
    "Cancer",
    "VarScan"
  ],
    "properties": {
    "github release": "v1.0"
  },
  "dxapi": "1.0.0",
  "inputSpec": [
    {
      "name": "fastqs",
      "label": "Reads",
      "help": "A file, in gzipped FASTQ format, with the reads to be mapped (or the left reads, for paired pairs).",
      "class": "array:file",
      "patterns": ["*.fq.gz", "*.fastq.gz"]
    },
    {
      "name": "usual_suspects",
      "label": "usual suspects",
      "help": "A text file containing known variants used to create a count for the number of reads containing wildtype and mutant alleles",
      "class": "file"
    },
    {
      "name": "minfreq",
      "label": "minfreq",
      "help": "Minimum reported variant frequency. If left blank Default=5.",
      "optional":true,
      "default":"20",
      "class": "string"
    },
    {
      "name": "mincov",
      "label": "mincov",
      "help": "Minimum coverage for variant calling. Default=10",
      "optional": true,
      "class": "string"
    },
    {
      "name": "mincovvar",
      "label": "mincovvar",
      "help":"Minimum number reads containing the variant allele. Default=5",
      "optional": true,
      "class": "string"
    },
    {
      "name": "keepfiles",
      "label": "keepfiles",
      "help": "Files to remove",
      "optional": false,
      "default":"1",
      "class": "string"
    }
      ],
  "outputSpec": [
    {
      "name": "amplivar_out",
      "label": "amplivar_output",
      "help": "All the amplivar_outputs.",
      "class": "array:file"
    } ,
    {
      "name": "vcfs",
      "label": "vcfs",
      "help": "vcfs.",
      "class": "array:file"
    }    
  ],
  "runSpec": {
      "execDepends": [
      {
        "name": "openjdk-7-jre-headless"
      },
      {
        "name": "openjdk-8-jre-headless"
      }
      ],
      "systemRequirements": {
      "main": {
        "instanceType": "mem1_ssd1_x4"
      }
    },
    "file": "src/code.sh",
    "interpreter": "bash"
  },
  "access": {
    "network": [  
    "*"
    ]
  } 
}
